<%= if @live_action in [:new] do %>
  <.modal return_to={Routes.game_show_path(@socket, :show)}>
    <.live_component
      module={Game2048Web.GameLive.FormComponent}
      id={:new}
      title={@page_title}
      action={@live_action}
      new_game_form={@new_game_form}
      return_to={Routes.game_show_path(@socket, :show)}
    />
  </.modal>
<% end %>

<div id="game">
  <p id="instruction">
    Press arrows (left, right, up or down) on your keyboard to slide <span class="yellow">yellow</span> numbered tiles
    through empty spots. Tiles can not slide through <span class="red">red</span> obstacles.
    To change gameplay parameters or just start over:
    <%= live_patch "restart the game", to: Routes.game_show_path(@socket, :new) %>.
  </p>

  <div id="grid">

    <!-- TODO: Consider extracting some logic to helpers. -->

    <% {grid_size_x, grid_size_y} = @game.grid_size %>
    <% grid_template = "grid-template-rows: repeat(#{grid_size_x}, calc(100%/#{grid_size_x})); grid-template-columns: repeat(#{grid_size_y}, calc(100%/#{grid_size_y}));" %>

    <div id="spots" style={grid_template}>
      <%= for row <- @game.grid do %>
        <%= for _spot <- row do %>
          <div class="spot" />
        <% end %>
      <% end %>
    </div>

    <div id="elements" style={grid_template}>
      <%= for {row, y} <- Enum.with_index(@game.grid) do %>
        <%= for {spot, x} <- Enum.with_index(row) do %>

          <% grid_position = "grid-column: #{x + 1}; grid-row: #{y + 1};" %>

          <%= if spot == :obstacle do %>
            <div class="obstacle" style={grid_position} />
          <% end %>

          <%= if is_integer(spot) do %>
            <div class="tile" style={grid_position}>
              <%= spot %>
            </div>
          <% end %>

        <% end %>
      <% end %>
    </div>
  </div>

  <div id="controls">
    <div phx-window-keydown="move" phx-key="ArrowRight" phx-value-direction="right" />
    <div phx-window-keydown="move" phx-key="ArrowLeft" phx-value-direction="left" />
    <div phx-window-keydown="move" phx-key="ArrowUp" phx-value-direction="up" />
    <div phx-window-keydown="move" phx-key="ArrowDown" phx-value-direction="down" />
  </div>
</div>
